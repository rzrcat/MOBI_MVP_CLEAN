"use strict";(()=>{var e={};e.id=178,e.ids=[178],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},71568:e=>{e.exports=require("zlib")},27595:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>N,patchFetch:()=>_,requestAsyncStorage:()=>f,routeModule:()=>x,serverHooks:()=>h,staticGenerationAsyncStorage:()=>w});var s={};t.r(s),t.d(s,{DELETE:()=>l,GET:()=>c,POST:()=>m,PUT:()=>p});var n=t(49303),o=t(88716),a=t(60670),i=t(87070),u=t(83603),d=t(42633);async function c(e,{params:r}){try{let e=await d.db.runeComment.findMany({where:{runeId:r.id},orderBy:{createdAt:"desc"}});return i.NextResponse.json(e)}catch(e){return console.error("Error fetching comments:",e),i.NextResponse.json({error:"코멘트를 불러오는 중 오류가 발생했습니다."},{status:500})}}async function m(e,{params:r}){try{let t=await (0,u.I)();if(!t)return i.NextResponse.json({error:"로그인이 필요합니다."},{status:401});let{content:s}=await e.json();if(!s||s.length>300)return i.NextResponse.json({error:"올바른 코멘트 내용을 입력해주세요."},{status:400});let n=await d.db.runeComment.create({data:{runeId:r.id,userId:t.user.id,userName:t.user.name,content:s}});return i.NextResponse.json(n)}catch(e){return console.error("Error creating comment:",e),i.NextResponse.json({error:"코멘트 작성 중 오류가 발생했습니다."},{status:500})}}async function p(e,{params:r}){try{let t=await (0,u.I)();if(!t)return i.NextResponse.json({error:"로그인이 필요합니다."},{status:401});let{content:s}=await e.json();if(!s||s.length>300)return i.NextResponse.json({error:"올바른 코멘트 내용을 입력해주세요."},{status:400});let n=await d.db.runeComment.findUnique({where:{id:r.commentId}});if(!n)return i.NextResponse.json({error:"코멘트를 찾을 수 없습니다."},{status:404});if(n.userId!==t.user.id&&!t.user.isAdmin)return i.NextResponse.json({error:"코멘트를 수정할 권한이 없습니다."},{status:403});let o=await d.db.runeComment.update({where:{id:r.commentId},data:{content:s,updatedAt:new Date}});return i.NextResponse.json(o)}catch(e){return console.error("Error updating comment:",e),i.NextResponse.json({error:"코멘트 수정 중 오류가 발생했습니다."},{status:500})}}async function l(e,{params:r}){try{let e=await (0,u.I)();if(!e)return i.NextResponse.json({error:"로그인이 필요합니다."},{status:401});let t=await d.db.runeComment.findUnique({where:{id:r.commentId}});if(!t)return i.NextResponse.json({error:"코멘트를 찾을 수 없습니다."},{status:404});if(t.userId!==e.user.id&&!e.user.isAdmin)return i.NextResponse.json({error:"코멘트를 삭제할 권한이 없습니다."},{status:403});return await d.db.runeComment.delete({where:{id:r.commentId}}),i.NextResponse.json({success:!0})}catch(e){return console.error("Error deleting comment:",e),i.NextResponse.json({error:"코멘트 삭제 중 오류가 발생했습니다."},{status:500})}}let x=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/runes/[id]/comments/route",pathname:"/api/runes/[id]/comments",filename:"route",bundlePath:"app/api/runes/[id]/comments/route"},resolvedPagePath:"/Users/s/Desktop/dev/mobi.gg/src/app/api/runes/[id]/comments/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:w,serverHooks:h}=x,N="/api/runes/[id]/comments/route";function _(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:w})}},83603:(e,r,t)=>{t.d(r,{I:()=>n});var s=t(36534);let n=async()=>{try{let{data:e,error:r}=await s.O.auth.getSession();if(r||!e.session)return null;return{user:{id:e.session.user.id,name:e.session.user.user_metadata?.name||e.session.user.email?.split("@")[0]||"익명",email:e.session.user.email,isAdmin:e.session.user.email?.endsWith("@admin.com")||!1}}}catch(e){return console.error("인증 처리 오류:",e),null}}},42633:(e,r,t)=>{t.d(r,{db:()=>n});var s=t(36534);let n={runeComment:{findMany:async({where:e,orderBy:r})=>{let{data:t,error:n}=await s.O.from("rune_comments").select("*").eq("runeId",e.runeId).order((r.createdAt,"created_at"),{ascending:"desc"!==r.createdAt});if(n)throw n;return t||[]},findUnique:async({where:e})=>{let{data:r,error:t}=await s.O.from("rune_comments").select("*").eq("id",e.id).single();return t?null:r},create:async({data:e})=>{let{data:r,error:t}=await s.O.from("rune_comments").insert([{rune_id:e.runeId,user_id:e.userId,user_name:e.userName,content:e.content,created_at:new Date().toISOString()}]).select().single();if(t)throw t;return r},update:async({where:e,data:r})=>{let{data:t,error:n}=await s.O.from("rune_comments").update({content:r.content,updated_at:r.updatedAt.toISOString()}).eq("id",e.id).select().single();if(n)throw n;return t},delete:async({where:e})=>{let{error:r}=await s.O.from("rune_comments").delete().eq("id",e.id);if(r)throw r;return!0}}}},36534:(e,r,t)=>{t.d(r,{O:()=>a});var s=t(31518);let n=process.env.NEXT_PUBLIC_SUPABASE_URL||"https://example.com",o=process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY||"temp-key";process.env.NEXT_PUBLIC_SUPABASE_URL&&process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY||console.warn("Missing Supabase environment variables. Using dummy client.");let a=(0,s.eI)(n,o)}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972,518],()=>t(27595));module.exports=s})();